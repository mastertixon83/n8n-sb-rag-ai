version: '3.9'

services:
  n8n_postgres: # Отдельный PostgreSQL для N8N
    container_name: n8n_postgres
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: "{{ N8N_POSTGRES_USER }}"
      POSTGRES_PASSWORD: "${N8N_POSTGRES_PASSWORD}"
      POSTGRES_DB: "{{ N8N_POSTGRES_DATABASE }}"
    ports:
        - "{{ N8N_POSTGRES_PORT }}:5432"
    volumes:
      - ./n8n_postgres_data:/var/lib/postgresql/data
      #- ./n8n_init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U {{ N8N_POSTGRES_USER }} -d {{ N8N_POSTGRES_DATABASE }}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - "{{ COMMON_DOCKER_NETWORK_NAME }}"

  n8n_pgadmin: # Отдельный PgAdmin
    container_name: n8n_pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: "{{ N8N_PGADMIN_EMAIL }}"
      PGADMIN_DEFAULT_PASSWORD: "${N8N_PGADMIN_PASSWORD}" # Будет подставлено Docker Compose из .env
    ports:
      - "5051:80" # Exposed on host on 5051
    depends_on:
      n8n_postgres:
        condition: service_healthy
    volumes:
      - ./n8n_pgadmin_data:/var/lib/pgadmin
    networks:
      - "{{ COMMON_DOCKER_NETWORK_NAME }}"
    user: "0:0"

  n8n_app: # Сам N8N
    container_name: n8n_app
    dns:
      - 8.8.8.8
      - 1.1.1.1
    image: n8nio/n8n
    restart: always
    environment:
      DB_TYPE: "{{ N8N_POSTGRES_TYPE }}"
      DB_POSTGRESDB_HOST: "{{ N8N_POSTGRES_HOST }}"
      DB_POSTGRESDB_PORT: "5432"
      DB_POSTGRESDB_DATABASE: "{{ N8N_POSTGRES_DATABASE }}"
      DB_POSTGRESDB_USER: "http://localhost:5678"
      DB_POSTGRESDB_PASSWORD: "${N8N_POSTGRES_PASSWORD}"
      WEBHOOK_URL: "{{N8N_WEBHOOK_URL}}"
      EDITOR_BASE_URL: "{{ N8N_WEBHOOK_URL }}"
      WEBHOOK_TUNNEL_URL: "${N8N_WEBHOOK_URL}"
      N8N_HOST: "0.0.0.0"
      N8N_PORT: 5678
      GENERIC_TIMEZONE: "{{ N8N_GENERIC_TIMEZONE }}"
      N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: "{{ N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS }}"
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
      N8N_PROTOCOL: "${N8N_PROTOCOL}"
      N8N_LOG_LEVEL: debug
    ports:
      - "5678:5678"
    volumes:
      - ./n8n_data:/root/.n8n
    depends_on:
      n8n_postgres:
        condition: service_healthy
    networks:
      - "{{ COMMON_DOCKER_NETWORK_NAME }}"
    user: "0:0"

  cloudflare_tunnel:
    container_name: cloudflare_tunnel
    image: cloudflare/cloudflared:latest
    restart: always
    environment:
      TUNNEL_TOKEN: "${CLOUDFLARE_TUNNEL_TOKEN}"
    command: tunnel run
    depends_on:
      n8n_app:
        condition: service_started
    networks:
      - "{{ COMMON_DOCKER_NETWORK_NAME }}"

  n8n_inbucket: # Inbucket для почты (доступен для Supabase через общую сеть)
    container_name: n8n_inbucket
    image: inbucket/inbucket:latest
    restart: always
    ports:
      - "{{ N8N_INBUCKET_WEB_PORT }}:9000" # Web UI Inbucket
      - "25000:25"   # SMTP Inbucket
      - "1100:110"  # POP3 Inbucket
    networks:
      - "{{ COMMON_DOCKER_NETWORK_NAME }}"
    environment:
      INBUCKET_WEB_ADDR: "0.0.0.0:9000"
      INBUCKET_SMTP_ADDR: "0.0.0.0:25"

networks:
  "{{ COMMON_DOCKER_NETWORK_NAME }}":
    external: true